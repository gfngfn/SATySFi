@require: option

type cell-record =
  (|
    left  : bool;
    right : bool;
  |)


module Tabular : sig

  direct \tabular : [
    (cell-record option -> inline-text -> cell) ->
      (cell-record option -> int -> int -> inline-text -> cell) ->
      cell ->
      (cell list) list;
    length list -> length list -> graphics list;
  ] inline-cmd

end = struct

  let make-alignments ropt =
    let r = Option.from (| right = true; left = true; |) ropt in
    let f b = if b then inline-fil else inline-nil in
    (f r#left, f r#right)


  let-inline ctx \tabular lstf =
    let pads = (5pt, 5pt, 2pt, 2pt) in
    let cellf ropt it =
      let (alignL, alignR) = make-alignments ropt in
        NormalCell(pads, alignL ++ read-inline ctx it ++ alignR)
    in
    let multif ropt nr nc it =
      let (alignL, alignR) = make-alignments ropt in
        MultiCell(nr, nc, pads, alignL ++ (read-inline ctx it) ++ alignR)
    in
    let empty = EmptyCell in
      tabular (lstf cellf multif empty)

end
