use open Basic

module Int :> sig
  type t = int
  val ~lift : int -> code int
  val persistent ~compare : int -> int -> ordering
  val persistent ~equal : int -> int -> bool
  val persistent ~max : int -> int -> int
  val persistent ~min : int -> int -> int
end = struct

  type t = int

  val ~lift = lift-int

  val persistent ~compare n1 n2 =
    if n1 == n2 then
      Equal
    else if n1 > n2 then
      Greater
    else
      Less

  val persistent ~equal = ( == )

  val persistent ~max n1 n2 =
    if n1 >= n2 then n1 else n2

  val persistent ~min n1 n2 =
    if n1 <= n2 then n1 else n2

end
