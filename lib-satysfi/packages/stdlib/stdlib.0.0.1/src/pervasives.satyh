module Pervasives = struct

  type point = length * length

  type paren = length -> length -> context -> inline-boxes * (length -> length)


  val get-natural-width ib =
    let (wid, _, _) = get-natural-metrics ib in
    wid


  val form-paragraph = line-break true true


  val kern len = inline-skip (0pt -' len)


  val inline ctx \hskip len =
    inline-skip len


  val no-break ib =
    inline-frame-outer (0pt, 0pt, 0pt, 0pt) (fun _ _ _ _ -> unite-graphics []) ib


  val inline ctx \no-break inner =
    no-break (read-inline ctx inner)


  val inline ctx \fil =
    discretionary 0 inline-nil inline-fil inline-nil


  val inline ctx \fil-both =
    discretionary 0 inline-nil inline-fil inline-fil


  val mandatory-break ctx =
    discretionary 0 (inline-skip (get-text-width ctx *' 2.)) inline-fil inline-nil


  val math-pi = 3.1415926536


  val increment r =
    r <- !r + 1

end
